---
# Source: draino/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: draino
  labels:
    app.kubernetes.io/name: draino
    helm.sh/chart: draino-0.2.0
    app.kubernetes.io/instance: draino
    app.kubernetes.io/managed-by: Helm
---
# Source: draino/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: draino
  labels:
    app.kubernetes.io/name: draino
    helm.sh/chart: draino-0.2.0
    app.kubernetes.io/instance: draino
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: ['']
  resources: [events]
  verbs: [create, patch, update]
- apiGroups: ['']
  resources: [nodes]
  verbs: [get, watch, list, update]
- apiGroups: ['']
  resources: [nodes/status]
  verbs: [patch, update]
- apiGroups: ['']
  resources: [pods]
  verbs: [get, watch, list, delete]
- apiGroups: ['']
  resources: [pods/eviction]
  verbs: [create]
- apiGroups: [apps]
  resources: [daemonsets]
  verbs: [get, watch, list]
- apiGroups: ['*']
  resources: [statefulsets]
  verbs: [get]
- apiGroups: ['']
  resources: [endpoints]
  verbs: [get, create, update]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "list", "create", "update", "delete", "watch"]
---
# Source: draino/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: draino
  labels:
    app.kubernetes.io/name: draino
    helm.sh/chart: draino-0.2.0
    app.kubernetes.io/instance: draino
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: draino
subjects:
  - kind: ServiceAccount
    name: draino
    namespace: default
---
# Source: draino/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: draino
  labels:
    app.kubernetes.io/name: draino
    helm.sh/chart: draino-0.2.0
    app.kubernetes.io/instance: draino
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - name: metrics
      port: 10002
  selector:
    app.kubernetes.io/name: draino
    app.kubernetes.io/instance: draino
---
# Source: draino/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: draino
  labels:
    app.kubernetes.io/name: draino
    helm.sh/chart: draino-0.2.0
    app.kubernetes.io/instance: draino
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: draino
      app.kubernetes.io/instance: draino
  template:
    metadata:
      labels:
        app.kubernetes.io/name: draino
        app.kubernetes.io/instance: draino
    spec:
      priorityClassName: system-cluster-critical
      containers:
        - name: draino
          image: "quay.io/amis/draino:v0.1.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: metrics
              containerPort: 10002
          command:
            - /draino
          livenessProbe:
            initialDelaySeconds: 30
            httpGet:
              path: /healthz
              port: 10002
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 128Mi
          securityContext:
            privileged: false
            readOnlyRootFilesystem: true
      serviceAccountName: draino
      securityContext:
        fsGroup: 101
        runAsGroup: 101
        runAsNonRoot: true
        runAsUser: 100
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - draino
              topologyKey: kubernetes.io/hostname
